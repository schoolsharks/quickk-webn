name: Deploy Client

on:
  push:
    branches:
      - staging
      - main
    paths:
      - 'client/**'
      - '.github/workflows/deploy-client.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: Determine environment
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV_NAME=main" >> $GITHUB_OUTPUT
            echo "DEPLOY_PATH=/home/ubuntu/quickk/quickk-main" >> $GITHUB_OUTPUT
            echo "API_URL=/api/v1" >> $GITHUB_OUTPUT
          else
            echo "ENV_NAME=staging" >> $GITHUB_OUTPUT
            echo "DEPLOY_PATH=/home/ubuntu/quickk/quickk-staging" >> $GITHUB_OUTPUT
            echo "API_URL=/api/v1" >> $GITHUB_OUTPUT
          fi
      
      - name: Install dependencies
        run: cd client && npm ci
      
      - name: Build React application
        run: |
          cd client
          # You may need to adjust these environment variables based on your React app requirements
          VITE_BACKEND_BASE_URL=${{ steps.env.outputs.API_URL }} npm run build
      
      - name: Deploy to AWS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          source: "client/dist/"
          target: "${{ steps.env.outputs.DEPLOY_PATH }}/client"
          strip_components: 1
          overwrite: true
      
      - name: Restart server to apply client changes
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
            # Use the environment-specific ecosystem config
            cd ${{ steps.env.outputs.DEPLOY_PATH }}
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            pm2 restart ecosystem.config.js